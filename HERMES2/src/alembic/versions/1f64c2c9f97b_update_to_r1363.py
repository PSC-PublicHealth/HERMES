"""update to r1363

Revision ID: 1f64c2c9f97b
Revises: 955a591d00d
Create Date: 2013-08-06 16:03:31.753041

"""

# revision identifiers, used by Alembic.
revision = '1f64c2c9f97b'
down_revision = '955a591d00d'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blobHolder',
    sa.Column('blobId', sa.Integer(), nullable=False),
    sa.Column('blob', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('blobId')
    )
    op.create_table('calendarEntries',
    sa.Column('calendarEntryId', sa.Integer(), nullable=False),
    sa.Column('modelId', sa.Integer(), nullable=True),
    sa.Column('calendarType', sa.CHAR(length=1), nullable=True),
    sa.Column('startDate', sa.Float(), nullable=True),
    sa.Column('typeId', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(length=4096), nullable=True),
    sa.ForeignKeyConstraint(['modelId'], ['models.modelId'], ),
    sa.ForeignKeyConstraint(['typeId'], ['types.typeId'], ),
    sa.PrimaryKeyConstraint('calendarEntryId')
    )
    op.create_table('typeSummary',
    sa.Column('summaryId', sa.Integer(), nullable=False),
    sa.Column('typeClass', sa.String(length=30), nullable=True),
    sa.Column('resultsId', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(length=250), nullable=True),
    sa.Column('Type', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['resultsId'], ['results.resultsId'], ),
    sa.PrimaryKeyConstraint('summaryId')
    )
    op.drop_table(u'vaxrpt')
    op.create_table('vaxRpt',
    sa.Column('vaxRptId', sa.Integer(), nullable=False),
    sa.Column('storesRptId', sa.Integer(), nullable=True),
    sa.Column('vax', sa.String(length=250), nullable=True),
    sa.Column('expired', sa.Float(), nullable=True),
    sa.Column('outages', sa.Float(), nullable=True),
    sa.Column('patients', sa.Float(), nullable=True),
    sa.Column('treated', sa.Float(), nullable=True),
    sa.Column('vials', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['storesRptId'], ['storesRpt.storesRptId'], ),
    sa.PrimaryKeyConstraint('vaxRptId')
    )
    op.create_table('truckSummary',
    sa.Column('truckSummaryId', sa.Integer(), nullable=False),
    sa.Column('TotalTrips', sa.Float(), nullable=True),
    sa.Column('TotalKm', sa.Float(), nullable=True),
    sa.Column('TotalTravelDays', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['truckSummaryId'], ['typeSummary.summaryId'], ),
    sa.PrimaryKeyConstraint('truckSummaryId')
    )
    op.create_table('fridgeSummary',
    sa.Column('fridgeSummaryId', sa.Integer(), nullable=False),
    sa.Column('NCreated', sa.Integer(), nullable=True),
    sa.Column('NCreatedAbsolute', sa.Integer(), nullable=True),
    sa.Column('ShipTimeDays', sa.Float(), nullable=True),
    sa.Column('ShipInstanceTimeDays', sa.Float(), nullable=True),
    sa.Column('ShipKm', sa.Float(), nullable=True),
    sa.Column('ShipInstanceKm', sa.Float(), nullable=True),
    sa.Column('NBroken', sa.Integer(), nullable=True),
    sa.Column('NBrokenAbsolute', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fridgeSummaryId'], ['typeSummary.summaryId'], ),
    sa.PrimaryKeyConstraint('fridgeSummaryId')
    )
    op.create_table('iceSummary',
    sa.Column('iceSummaryId', sa.Integer(), nullable=False),
    sa.Column('TotalTrips', sa.Integer(), nullable=True),
    sa.Column('TotalKm', sa.Float(), nullable=True),
    sa.Column('TotalTravelDays', sa.Float(), nullable=True),
    sa.Column('NBroken', sa.Integer(), nullable=True),
    sa.Column('NCreated', sa.Integer(), nullable=True),
    sa.Column('NBrokenAbsolute', sa.Integer(), nullable=True),
    sa.Column('NCreatedAbsolute', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['iceSummaryId'], ['typeSummary.summaryId'], ),
    sa.PrimaryKeyConstraint('iceSummaryId')
    )
    op.create_table('basicSummary',
    sa.Column('basicSummaryId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['basicSummaryId'], ['typeSummary.summaryId'], ),
    sa.PrimaryKeyConstraint('basicSummaryId')
    )
    op.create_table('vaccineSummary',
    sa.Column('vaccineSummaryId', sa.Integer(), nullable=False),
    sa.Column('DisplayName', sa.String(length=250), nullable=True),
    sa.Column('DosesPerVial', sa.Integer(), nullable=True),
    sa.Column('StorageHistoryVialDays', sa.Float(), nullable=True),
    sa.Column('roomtemperatureStorageFrac', sa.Float(), nullable=True),
    sa.Column('coolerStorageFrac', sa.Float(), nullable=True),
    sa.Column('freezerStorageFrac', sa.Float(), nullable=True),
    sa.Column('ShipTimeDays', sa.Float(), nullable=True),
    sa.Column('ShipVialDays', sa.Float(), nullable=True),
    sa.Column('ShipKm', sa.Float(), nullable=True),
    sa.Column('ShipVialKm', sa.Float(), nullable=True),
    sa.Column('Applied', sa.Integer(), nullable=True),
    sa.Column('Treated', sa.Integer(), nullable=True),
    sa.Column('SupplyRatio', sa.Float(), nullable=True),
    sa.Column('OpenVialWasteFrac', sa.Float(), nullable=True),
    sa.Column('VialsUsed', sa.Integer(), nullable=True),
    sa.Column('VialsExpired', sa.Integer(), nullable=True),
    sa.Column('VialsBroken', sa.Integer(), nullable=True),
    sa.Column('VialsCreated', sa.Integer(), nullable=True),
    sa.Column('VialsUsedAbsolute', sa.Integer(), nullable=True),
    sa.Column('VialsExpiredAbsolute', sa.Integer(), nullable=True),
    sa.Column('VialsBrokenAbsolute', sa.Integer(), nullable=True),
    sa.Column('VialsCreatedAbsolute', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vaccineSummaryId'], ['typeSummary.summaryId'], ),
    sa.PrimaryKeyConstraint('vaccineSummaryId')
    )
    op.add_column(u'routesRpt', sa.Column('triptimes_multival', sa.Integer(), nullable=True))
    op.alter_column(u'stops', u'isSupplier',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.add_column(u'storesRpt', sa.Column('storageRatio_multival', sa.Integer(), nullable=True))
    op.drop_column(u'storesRpt', u'category')
    op.drop_column(u'storesRpt', u'function')
    op.drop_column(u'storesRpt', u'name')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'storesRpt', sa.Column(u'name', mysql.VARCHAR(length=250), nullable=True))
    op.add_column(u'storesRpt', sa.Column(u'function', mysql.VARCHAR(length=250), nullable=True))
    op.add_column(u'storesRpt', sa.Column(u'category', mysql.VARCHAR(length=250), nullable=True))
    op.drop_column(u'storesRpt', 'storageRatio_multival')
    op.alter_column(u'stops', u'isSupplier',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.drop_column(u'routesRpt', 'triptimes_multival')
    op.create_table(u'vaxrpt',
    sa.Column(u'vaxRptId', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column(u'storesRptId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column(u'vax', mysql.VARCHAR(length=250), nullable=True),
    sa.Column(u'expired', mysql.FLOAT(), nullable=True),
    sa.Column(u'outages', mysql.FLOAT(), nullable=True),
    sa.Column(u'patients', mysql.FLOAT(), nullable=True),
    sa.Column(u'treated', mysql.FLOAT(), nullable=True),
    sa.Column(u'vials', mysql.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['storesRptId'], [u'storesRpt.storesRptId'], name=u'vaxrpt_ibfk_1'),
    sa.PrimaryKeyConstraint(u'vaxRptId'),
    mysql_default_charset=u'latin1',
    mysql_engine=u'InnoDB'
    )
    op.drop_table('vaccineSummary')
    op.drop_table('basicSummary')
    op.drop_table('iceSummary')
    op.drop_table('fridgeSummary')
    op.drop_table('truckSummary')
    op.drop_table('vaxRpt')
    op.drop_table('typeSummary')
    op.drop_table('calendarEntries')
    op.drop_table('blobHolder')
    ### end Alembic commands ###
